(function(){var d,c;d=angular.module("validator.directive",[]);c=function(g){return{restrict:"A",require:"ngModel",link:function(b,d,e){var c,h,m;c=g.get("$validator");h=g.get("$parse")(e.ngModel);m=function(a,c){h.assign(b,a.filter(h(b)));return a.validator(h(b),b,d,e,c)};return b.$watch(e.ngModel,function(a,b){var k,d,f,l;if(a!==b&&(k=e.validator.match(/^\/(.*)\/$/),!k&&(k=e.validator.match(/^\[(.*)\]$/))))for(k=k[1].split(","),f=0,l=k.length;f<l;f++)d=k[f],(d=c.getRule(d.trim()))&&m(d,!0)})}}};
c.$inject=["$injector"];d.directive("validator",c)}).call(this);(function(){angular.module("validator",["validator.provider","validator.directive","validator.rules"])}).call(this);
(function(){var d,c=[].indexOf||function(d){for(var b=0,c=this.length;b<c;b++)if(b in this&&this[b]===d)return b;return-1};d=angular.element;angular.module("validator.provider",[]).provider("$validator",function(){var g,b,p;g=null;this.rules={};b={all:function(){for(var e in this)if("all"!==e)this[e]()}};p=function(e){return g=e};this.convertRule=function(e){var b,h,m,a,n;null==e&&(e={});a={invoke:e.invoke,filter:e.filter,validator:e.validator,error:e.error,success:e.success};null==a.invoke&&(a.invoke=
[]);null==a.filter&&(a.filter=function(a){return a});null==a.validator&&(a.validator=function(){return!0});null==a.error&&(a.error="");a.error.constructor===String&&(b=a.error,a.error=function(a,e){var f,l,c;f=d(a).parent();c=[];for(l=1;3>=l;++l){if(f.hasClass("form-group")){d(a).parent().append("<label class='control-label error'>"+b+"</label>");f.addClass("has-error");break}c.push(f=f.parent())}return c});n=function(a,e){var f,b,c,g,h;f=d(a).parent();h=[];for(b=1;3>=b;++b){if(f.hasClass("has-error")){f.removeClass("has-error");
g=f.find("label");b=0;for(c=g.length;b<c;b++)if(f=g[b],d(f).hasClass("error")){f.remove();break}break}h.push(f=f.parent())}return h};a.success&&"function"===typeof a.success?(h=a.success,a.success=function(a,b){h(a,b);return n(a,b)}):a.success=n;if(a.validator.constructor===RegExp)m=a.validator,a.validator=function(b,e,f,d,g){null==g&&(g=!1);if(m.test(b))return a.success(f,d);if(g&&0<=c.call(a.invoke,"watch"))return a.error(f,d)};else if("function"===typeof a.validator||a.validator.constructor===
Array)h=a.validator,a.validator=function(a,b,e,d,c){null==c&&(c=!1);h.$injectx={value:a,scope:b,element:e,attrs:d,isFromWatch:c,$http:g.get("$http")};return g.invoke(h)};return a};this.register=function(b,c){null==c&&(c={});return this.rules[b]=this.convertRule(c)};this.getRule=function(b){return this.rules[b]?this.rules[b]:null};this.validate=function(b){};this.get=function(c){p(c);b.all();return{rules:this.rules,getRule:this.getRule,validate:this.validate}};this.get.$inject=["$injector"];return this.$get=
this.get})}).call(this);(function(){var d,c;d=angular.module("validator.rules",["validator.provider"]);c=function(c){c.register("required",{invoke:["watch"],validator:/^.+$/,error:"This field is required."});return c.register("trim",{filter:function(b){return b.trim()}})};c.$inject=["$validatorProvider"];d.config(c)}).call(this);
